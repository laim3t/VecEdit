[2025-05-15 14:00:39.135] [Debug] Logger::initialize - 日志系统已初始化 (logger.cpp:98, void Logger::initialize(bool, const QString&))
[2025-05-15 14:00:39.138] [Debug] main - 应用程序启动 (main.cpp:13, int qMain(int, char**))
[2025-05-15 14:00:39.139] [Info] main - 欢迎使用VecEdit (main.cpp:14, int qMain(int, char**))
[2025-05-15 14:00:39.145] [Debug] VectorTableItemDelegate::refreshCache - 缓存已清空，下次使用将重新从数据库加载 (vectortabledelegate.cpp:27, void VectorTableItemDelegate::refreshCache())
[2025-05-15 14:00:39.146] [Debug] MainWindow::setupTabBar() - 初始化Tab栏 (mainwindow.cpp:509, void MainWindow::setupTabBar())
[2025-05-15 14:00:39.148] [Debug] MainWindow::setupTabBar() - Tab栏初始化完成 (mainwindow.cpp:556, void MainWindow::setupTabBar())
[2025-05-15 14:00:39.230] [Debug] main - 进入应用程序主循环 (main.cpp:19, int qMain(int, char**))
[2025-05-15 14:01:13.863] [Debug] main - 应用程序退出，返回码: 0 (main.cpp:21, int qMain(int, char**))
[2025-05-16 15:22:42.190] [Debug] Logger::initialize - 日志系统已初始化 (logger.cpp:98, void Logger::initialize(bool, const QString&))
[2025-05-16 15:22:42.197] [Debug] main - 应用程序启动 (main.cpp:13, int qMain(int, char**))
[2025-05-16 15:22:42.197] [Info] main - 欢迎使用VecEdit (main.cpp:14, int qMain(int, char**))
[2025-05-16 15:22:42.204] [Debug] VectorTableItemDelegate::refreshCache - 缓存已清空，下次使用将重新从数据库加载 (vectortabledelegate.cpp:27, void VectorTableItemDelegate::refreshCache())
[2025-05-16 15:22:42.204] [Debug] MainWindow::setupTabBar() - 初始化Tab栏 (mainwindow.cpp:509, void MainWindow::setupTabBar())
[2025-05-16 15:22:42.204] [Debug] MainWindow::setupTabBar() - Tab栏初始化完成 (mainwindow.cpp:556, void MainWindow::setupTabBar())
[2025-05-16 15:22:42.302] [Debug] main - 进入应用程序主循环 (main.cpp:19, int qMain(int, char**))
[2025-05-16 15:22:50.612] [Debug] 执行SQL语句： "CREATE TABLE \"type_options\" (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    type_name TEXT NOT NULL " ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.616] [Debug] 执行SQL语句： "CREATE TABLE timeset_list (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    timeset_name TEXT NOT NULL" ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.616] [Debug] 执行SQL语句： "CREATE TABLE wave_options (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    wave_type TEXT NOT NULL UN" ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.628] [Debug] 执行SQL语句： "CREATE TABLE \"pin_settings\" (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    pin_id INTEGER NOT NULL " ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.632] [Debug] 执行SQL语句： "CREATE TABLE vector_table_group_values(\n    id INTEGER PRIMARY KEY AUTOINCREMENT, \n    vector_data_i" ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.635] [Debug] 执行SQL语句： "CREATE UNIQUE INDEX idx_vector_group_unique\nON vector_table_group_values(vector_data_id, group_id);"  (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.638] [Debug] 执行SQL语句： "CREATE TABLE pin_options(\n    id INTEGER PRIMARY KEY NOT NULL, \n    pin_value TEXT\n);"  (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.642] [Debug] 执行SQL语句： "CREATE TABLE instruction_options(\n    id INTEGER PRIMARY KEY, \n    instruction_value TEXT NOT NULL U" ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.649] [Debug] 执行SQL语句： "CREATE TABLE vector_tables(\n    id INTEGER PRIMARY KEY, \n    table_name VARCHAR NOT NULL UNIQUE, \n  " ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.652] [Debug] 执行SQL语句： "CREATE TABLE pin_list(\n    id INTEGER PRIMARY KEY AUTOINCREMENT, \n    pin_name TEXT NOT NULL, \n    p" ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.655] [Debug] 执行SQL语句： "CREATE TABLE vector_table_data(\n    id INTEGER PRIMARY KEY AUTOINCREMENT, \n    table_id INTEGER NOT " ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.659] [Debug] 执行SQL语句： "CREATE TABLE timeset_settings(\n    id INTEGER PRIMARY KEY AUTOINCREMENT, \n    timeset_id INTEGER NOT" ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.665] [Debug] 执行SQL语句： "CREATE TABLE vector_table_pin_values(\n    id INTEGER PRIMARY KEY AUTOINCREMENT, \n    vector_data_id " ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.668] [Debug] 执行SQL语句： "CREATE UNIQUE INDEX idx_vector_pin_unique\nON vector_table_pin_values(\n    vector_data_id, \n    vecto" ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.671] [Debug] 执行SQL语句： "CREATE TABLE vector_table_pins(\n    id INTEGER PRIMARY KEY AUTOINCREMENT, \n    table_id INTEGER NOT " ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.675] [Debug] 执行SQL语句： "CREATE UNIQUE INDEX idx_table_pin_unique\nON vector_table_pins(\n    table_id, \n    pin_id\n);"  (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.680] [Debug] 执行SQL语句： "CREATE TABLE pin_groups(\n    group_id INTEGER PRIMARY KEY AUTOINCREMENT, \n    table_id INTEGER NOT N" ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.680] [Debug] 执行SQL语句： "CREATE TABLE pin_group_members(\n    id INTEGER PRIMARY KEY AUTOINCREMENT, \n    group_id INTEGER NOT " ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.680] [Debug] 执行SQL语句： "CREATE UNIQUE INDEX idx_group_member_unique\nON pin_group_members(\n    group_id, \n    pin_id\n);"  (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.680] [Debug] 执行SQL语句： "CREATE VIEW view_vector_table_data_display AS\nSELECT\n    vtd.id AS vector_data_id,\n    vt.id AS tabl" ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.698] [Debug] 执行SQL语句： "CREATE VIEW view_vector_table_pins_display AS\nSELECT\n    vtp.id AS vector_pin_id,\n    vt.table_name," ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.702] [Debug] 执行SQL语句： "CREATE VIEW view_vector_table_pin_values_display AS\nSELECT\n    vtd.id AS vector_data_id,\n    vt.tabl" ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.705] [Debug] 执行SQL语句： "CREATE VIEW view_pin_groups_display AS\nSELECT\n    pg.group_id,\n    vt.table_name,\n    pg.group_name," ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.711] [Debug] 执行SQL语句： "CREATE VIEW view_pin_group_members_display AS\nSELECT\n    pg.group_name,\n    pl.pin_name,\n    pgm.sor" ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.716] [Debug] 执行SQL语句： "CREATE TABLE VectorTableMasterRecord (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,           -- 主键\n   " ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.720] [Debug] 执行SQL语句： "CREATE TABLE VectorTableColumnConfiguration (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,             " ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.735] [Debug] 执行SQL语句： "CREATE TRIGGER trigger_update_vector_table_master_record_updated_at\nAFTER UPDATE ON VectorTableMaste" ... (databasemanager.cpp:530, bool DatabaseManager::executeSqlScript(const QString&))
[2025-05-16 15:22:50.750] [Info] 数据库版本已在表中更新为: 2 (databasemanager.cpp:375, bool DatabaseManager::setCurrentDbFileVersionInTable(int))
[2025-05-16 15:22:50.752] [Info] 默认固定数据初始化成功 (databasemanager.cpp:638, bool DatabaseManager::initializeDefaultData())
[2025-05-16 15:22:50.752] [Info] 数据库已成功初始化:  "C:/Users/GIGA/Documents/TEST8.db" ， 版本:  2 (databasemanager.cpp:120, bool DatabaseManager::initializeNewDatabase(const QString&, const QString&))
[2025-05-16 15:22:50.752] [Debug] "TableStyleManager::applyTableStyle(QTableView*)"  - Entry (tablestylemanager.cpp:61, static void TableStyleManager::applyTableStyle(QTableView*))
[2025-05-16 15:22:50.752] [Debug] "TableStyleManager::applyTableStyle(QTableView*)"  - 开始设置表格视图样式 (tablestylemanager.cpp:69, static void TableStyleManager::applyTableStyle(QTableView*))
[2025-05-16 15:22:50.758] [Debug] "TableStyleManager::applyTableStyle(QTableView*)"  - 表格视图样式设置完成 (tablestylemanager.cpp:103, static void TableStyleManager::applyTableStyle(QTableView*))
[2025-05-16 15:22:55.417] [Debug] MainWindow::showTimeSetDialog - 显示TimeSet设置对话框，isNewTable: true (mainwindow.cpp:338, bool MainWindow::showTimeSetDialog(bool))
[2025-05-16 15:22:55.424] [Debug] 开始加载TimeSet列表到UI (timesetdialog.cpp:185, bool TimeSetDialog::loadExistingTimeSets())
[2025-05-16 15:22:55.424] [Debug] 开始加载TimeSet数据... (timesetdataaccess.cpp:97, bool TimeSetDataAccess::loadExistingTimeSets(QList<TimeSetData>&))
[2025-05-16 15:22:55.424] [Debug] 执行SQL查询: SELECT id, timeset_name, period FROM timeset_list ORDER BY id (timesetdataaccess.cpp:106, bool TimeSetDataAccess::loadExistingTimeSets(QList<TimeSetData>&))
[2025-05-16 15:22:55.424] [Debug] 查询执行成功，开始遍历结果 (timesetdataaccess.cpp:113, bool TimeSetDataAccess::loadExistingTimeSets(QList<TimeSetData>&))
[2025-05-16 15:22:55.424] [Debug] 成功加载 0 个TimeSet记录 (timesetdataaccess.cpp:137, bool TimeSetDataAccess::loadExistingTimeSets(QList<TimeSetData>&))
[2025-05-16 15:22:55.424] [Debug] 数据库中实际存在 0 个TimeSet记录 (timesetdataaccess.cpp:148, bool TimeSetDataAccess::loadExistingTimeSets(QList<TimeSetData>&))
[2025-05-16 15:22:55.424] [Debug] 成功从数据库加载，TimeSet数量： 0 (timesetdialog.cpp:190, bool TimeSetDialog::loadExistingTimeSets())
[2025-05-16 15:22:57.146] [Debug] 添加新TimeSet: 用户输入名称 = "timeset_1" (timesetdialog.cpp:263, void TimeSetDialog::addTimeSet())
[2025-05-16 15:22:57.147] [Debug] 检查TimeSet名称是否存在: "timeset_1" (timesetdataaccess.cpp:56, bool TimeSetDataAccess::isTimeSetNameExists(const QString&))
[2025-05-16 15:22:57.147] [Debug] TimeSet名称不存在 (timesetdataaccess.cpp:74, bool TimeSetDataAccess::isTimeSetNameExists(const QString&))
[2025-05-16 15:22:57.147] [Debug] 准备保存新TimeSet到数据库: name= "timeset_1" , period= 1000 (timesetdialog.cpp:287, void TimeSetDialog::addTimeSet())
[2025-05-16 15:22:57.153] [Debug] TimeSetDataAccess::savePinSelection - 开始为 TimeSet ID: 1 保存管脚选择 (timesetdataaccess.cpp:284, bool TimeSetDataAccess::savePinSelection(int, const QList<int>&))
[2025-05-16 15:22:57.153] [Debug] TimeSetDataAccess::savePinSelection - 准备执行删除SQL: "DELETE FROM timeset_settings WHERE timeset_id = ?" with ID: 1 (timesetdataaccess.cpp:289, bool TimeSetDataAccess::savePinSelection(int, const QList<int>&))
[2025-05-16 15:22:57.153] [Debug] TimeSetDataAccess::savePinSelection - 成功删除旧关联 for TimeSet ID: 1 (timesetdataaccess.cpp:300, bool TimeSetDataAccess::savePinSelection(int, const QList<int>&))
[2025-05-16 15:22:57.153] [Debug] TimeSetDataAccess::savePinSelection - 没有需要添加的新管脚关联 for TimeSet ID: 1 (timesetdataaccess.cpp:306, bool TimeSetDataAccess::savePinSelection(int, const QList<int>&))
[2025-05-16 15:22:57.153] [Debug] 新TimeSet保存成功: id= 1 (timesetdialog.cpp:293, void TimeSetDialog::addTimeSet())
[2025-05-16 15:23:00.307] [Debug] TimeSetDataAccess::saveTimeSetEdgesToDatabase - 开始为 TimeSet ID: 1 保存边沿参数 (timesetdataaccess.cpp:352, bool TimeSetDataAccess::saveTimeSetEdgesToDatabase(int, const QList<TimeSetEdgeData>&))
[2025-05-16 15:23:00.307] [Debug] TimeSetDataAccess::saveTimeSetEdgesToDatabase - 准备执行删除SQL: "DELETE FROM timeset_settings WHERE timeset_id = ?" with ID: 1 (timesetdataaccess.cpp:358, bool TimeSetDataAccess::saveTimeSetEdgesToDatabase(int, const QList<TimeSetEdgeData>&))
[2025-05-16 15:23:00.308] [Debug] TimeSetDataAccess::saveTimeSetEdgesToDatabase - 成功删除旧边沿参数 for TimeSet ID: 1 (timesetdataaccess.cpp:379, bool TimeSetDataAccess::saveTimeSetEdgesToDatabase(int, const QList<TimeSetEdgeData>&))
[2025-05-16 15:23:00.308] [Debug] TimeSetDataAccess::saveTimeSetEdgesToDatabase - 开始添加 2 个新的边沿参数 for TimeSet ID: 1 (timesetdataaccess.cpp:390, bool TimeSetDataAccess::saveTimeSetEdgesToDatabase(int, const QList<TimeSetEdgeData>&))
[2025-05-16 15:23:00.316] [Debug] TimeSetDataAccess::saveTimeSetEdgesToDatabase - 成功添加边沿: TS ID= 1 , Pin ID= 1 (timesetdataaccess.cpp:421, bool TimeSetDataAccess::saveTimeSetEdgesToDatabase(int, const QList<TimeSetEdgeData>&))
[2025-05-16 15:23:00.320] [Debug] TimeSetDataAccess::saveTimeSetEdgesToDatabase - 成功添加边沿: TS ID= 1 , Pin ID= 2 (timesetdataaccess.cpp:421, bool TimeSetDataAccess::saveTimeSetEdgesToDatabase(int, const QList<TimeSetEdgeData>&))
[2025-05-16 15:23:00.320] [Debug] TimeSetDataAccess::saveTimeSetEdgesToDatabase - 成功完成 for TimeSet ID: 1 (timesetdataaccess.cpp:425, bool TimeSetDataAccess::saveTimeSetEdgesToDatabase(int, const QList<TimeSetEdgeData>&))
[2025-05-16 15:23:00.320] [Debug] TimeSetDataAccess::loadTimeSetEdges - 准备执行查询SQL: "SELECT timeset_id, pin_id, T1R, T1F, STBR, wave_id FROM timeset_settings WHERE timeset_id = ?" with ID: 1 (timesetdataaccess.cpp:196, QList<TimeSetEdgeData> TimeSetDataAccess::loadTimeSetEdges(int))
[2025-05-16 15:23:00.320] [Debug] TimeSetDataAccess::loadTimeSetEdges - 查询成功 for TimeSet ID: 1 (timesetdataaccess.cpp:211, QList<TimeSetEdgeData> TimeSetDataAccess::loadTimeSetEdges(int))
[2025-05-16 15:23:00.320] [Debug] TimeSetDataAccess::loadTimeSetEdges - 加载边沿: Pin ID= 1 (timesetdataaccess.cpp:222, QList<TimeSetEdgeData> TimeSetDataAccess::loadTimeSetEdges(int))
[2025-05-16 15:23:00.320] [Debug] TimeSetDataAccess::loadTimeSetEdges - 加载边沿: Pin ID= 2 (timesetdataaccess.cpp:222, QList<TimeSetEdgeData> TimeSetDataAccess::loadTimeSetEdges(int))
[2025-05-16 15:23:00.320] [Debug] TimeSetDataAccess::loadTimeSetEdges - 总共加载 2 个边沿 for TimeSet ID: 1 (timesetdataaccess.cpp:224, QList<TimeSetEdgeData> TimeSetDataAccess::loadTimeSetEdges(int))
[2025-05-16 15:23:01.423] [Debug] TimeSetDialog::onAccepted - 开始处理确定按钮事件 (timesetdialog.cpp:778, void TimeSetDialog::onAccepted())
[2025-05-16 15:23:01.423] [Debug] TimeSetDialog::onAccepted - 检查待删除TimeSet列表: 0 个 (timesetdialog.cpp:785, void TimeSetDialog::onAccepted())
[2025-05-16 15:23:01.423] [Debug] TimeSetDialog::onAccepted - 没有需要删除的TimeSet (timesetdialog.cpp:874, void TimeSetDialog::onAccepted())
[2025-05-16 15:23:01.423] [Debug] TimeSetDialog::onAccepted - 开始保存所有TimeSet的名称和周期 (timesetdialog.cpp:878, void TimeSetDialog::onAccepted())
[2025-05-16 15:23:01.423] [Debug] TimeSetDialog::onAccepted - 准备更新TimeSet ID: 1  名称: "timeset_1"  周期: 1000 (timesetdialog.cpp:885, void TimeSetDialog::onAccepted())
[2025-05-16 15:23:01.428] [Debug] TimeSetDialog::onAccepted - 所有TimeSet的名称和周期已尝试保存 (timesetdialog.cpp:916, void TimeSetDialog::onAccepted())
[2025-05-16 15:23:01.428] [Debug] TimeSetDialog::onAccepted - 开始保存所有TimeSet的边沿设置 (timesetdialog.cpp:919, void TimeSetDialog::onAccepted())
[2025-05-16 15:23:01.429] [Debug] TimeSetDialog::onAccepted - 准备保存 TimeSet ID: 1 的边沿 (timesetdialog.cpp:931, void TimeSetDialog::onAccepted())
[2025-05-16 15:23:01.429] [Debug] TimeSetDataAccess::saveTimeSetEdgesToDatabase - 开始为 TimeSet ID: 1 保存边沿参数 (timesetdataaccess.cpp:352, bool TimeSetDataAccess::saveTimeSetEdgesToDatabase(int, const QList<TimeSetEdgeData>&))
[2025-05-16 15:23:01.429] [Debug] TimeSetDataAccess::saveTimeSetEdgesToDatabase - 准备执行删除SQL: "DELETE FROM timeset_settings WHERE timeset_id = ?" with ID: 1 (timesetdataaccess.cpp:358, bool TimeSetDataAccess::saveTimeSetEdgesToDatabase(int, const QList<TimeSetEdgeData>&))
[2025-05-16 15:23:01.433] [Debug] TimeSetDataAccess::saveTimeSetEdgesToDatabase - 成功删除旧边沿参数 for TimeSet ID: 1 (timesetdataaccess.cpp:379, bool TimeSetDataAccess::saveTimeSetEdgesToDatabase(int, const QList<TimeSetEdgeData>&))
[2025-05-16 15:23:01.433] [Debug] TimeSetDataAccess::saveTimeSetEdgesToDatabase - 开始添加 2 个新的边沿参数 for TimeSet ID: 1 (timesetdataaccess.cpp:390, bool TimeSetDataAccess::saveTimeSetEdgesToDatabase(int, const QList<TimeSetEdgeData>&))
[2025-05-16 15:23:01.436] [Debug] TimeSetDataAccess::saveTimeSetEdgesToDatabase - 成功添加边沿: TS ID= 1 , Pin ID= 1 (timesetdataaccess.cpp:421, bool TimeSetDataAccess::saveTimeSetEdgesToDatabase(int, const QList<TimeSetEdgeData>&))
[2025-05-16 15:23:01.439] [Debug] TimeSetDataAccess::saveTimeSetEdgesToDatabase - 成功添加边沿: TS ID= 1 , Pin ID= 2 (timesetdataaccess.cpp:421, bool TimeSetDataAccess::saveTimeSetEdgesToDatabase(int, const QList<TimeSetEdgeData>&))
[2025-05-16 15:23:01.440] [Debug] TimeSetDataAccess::saveTimeSetEdgesToDatabase - 成功完成 for TimeSet ID: 1 (timesetdataaccess.cpp:425, bool TimeSetDataAccess::saveTimeSetEdgesToDatabase(int, const QList<TimeSetEdgeData>&))
[2025-05-16 15:23:01.440] [Debug] TimeSetDialog::onAccepted - 成功保存 TimeSet ID: 1 的边沿 (timesetdialog.cpp:945, void TimeSetDialog::onAccepted())
[2025-05-16 15:23:01.440] [Debug] TimeSetDialog::onAccepted - 所有TimeSet的边沿设置已尝试保存 (timesetdialog.cpp:957, void TimeSetDialog::onAccepted())
[2025-05-16 15:23:01.440] [Debug] TimeSetDialog::onAccepted - 初始设置模式，跳过向量表检查 (timesetdialog.cpp:987, void TimeSetDialog::onAccepted())
[2025-05-16 15:23:01.440] [Debug] TimeSetDialog::onAccepted - 检查已配置的TimeSet数量： 1 (timesetdialog.cpp:991, void TimeSetDialog::onAccepted())
[2025-05-16 15:23:01.440] [Debug] TimeSetDialog::onAccepted - 关闭对话框并接受更改 (timesetdialog.cpp:994, void TimeSetDialog::onAccepted())
[2025-05-16 15:23:01.444] [Debug] MainWindow::showTimeSetDialog - 用户确认TimeSet设置 (mainwindow.cpp:353, bool MainWindow::showTimeSetDialog(bool))
[2025-05-16 15:23:01.445] [Debug] MainWindow::createNewProject - 检查向量表数量: 0 (mainwindow.cpp:202, void MainWindow::createNewProject())
[2025-05-16 15:23:01.445] [Debug] MainWindow::createNewProject - 未找到向量表，自动显示创建向量表对话框 (mainwindow.cpp:208, void MainWindow::createNewProject())
[2025-05-16 15:23:01.445] [Debug] "MainWindow::addNewVectorTable"  - 开始添加新向量表 (mainwindow.cpp:869, void MainWindow::addNewVectorTable())
[2025-05-16 15:23:01.445] [Debug] "MainWindow::addNewVectorTable"  - 数据库已连接 ( "C:/Users/GIGA/Documents/TEST8.db" )，准备创建向量表 (mainwindow.cpp:879, void MainWindow::addNewVectorTable())
[2025-05-16 15:23:02.803] [Debug] "MainWindow::addNewVectorTable"  - 用户输入的向量表名称: "1" (mainwindow.cpp:911, void MainWindow::addNewVectorTable())
[2025-05-16 15:23:02.809] [Debug] "MainWindow::addNewVectorTable"  - 新向量表创建成功，ID: 1 , 名称: "1" (mainwindow.cpp:943, void MainWindow::addNewVectorTable())
[2025-05-16 15:23:02.810] [Debug] "Utils::PathUtils::getProjectBinaryDataDirectory" - 输入数据库路径: "C:/Users/GIGA/Documents/TEST8.db" (C:/Users/GIGA/Desktop/QTProject/VecEdit/common/utils/pathutils.h:29, static QString Utils::PathUtils::getProjectBinaryDataDirectory(const QString&))
[2025-05-16 15:23:02.810] [Debug] "Utils::PathUtils::getProjectBinaryDataDirectory" - 生成的项目二进制数据目录： "C:\\Users\\GIGA\\Documents\\TEST8_vbindata" (C:/Users/GIGA/Desktop/QTProject/VecEdit/common/utils/pathutils.h:50, static QString Utils::PathUtils::getProjectBinaryDataDirectory(const QString&))
[2025-05-16 15:23:02.810] [Debug] "MainWindow::addNewVectorTable"  - 项目二进制数据目录: "C:\\Users\\GIGA\\Documents\\TEST8_vbindata" (mainwindow.cpp:954, void MainWindow::addNewVectorTable())
[2025-05-16 15:23:02.811] [Debug] "MainWindow::addNewVectorTable"  - 已创建项目二进制数据目录:  "C:\\Users\\GIGA\\Documents\\TEST8_vbindata" (mainwindow.cpp:965, void MainWindow::addNewVectorTable())
[2025-05-16 15:23:02.811] [Debug] "MainWindow::addNewVectorTable"  - 绝对二进制文件路径: "C:\\Users\\GIGA\\Documents\\TEST8_vbindata\\table_1_data.vbindata" (mainwindow.cpp:973, void MainWindow::addNewVectorTable())
[2025-05-16 15:23:02.816] [Debug] "MainWindow::addNewVectorTable"  - VectorTableMasterRecord记录创建成功 for table ID: 1 (mainwindow.cpp:996, void MainWindow::addNewVectorTable())
[2025-05-16 15:23:02.816] [Debug] "MainWindow::addDefaultColumnConfigurations"  - 开始为表ID  1  添加默认列配置 (mainwindow.cpp:2658, bool MainWindow::addDefaultColumnConfigurations(int))
[2025-05-16 15:23:02.820] [Debug] "MainWindow::addDefaultColumnConfigurations"  - 成功添加默认列配置 (mainwindow.cpp:2780, bool MainWindow::addDefaultColumnConfigurations(int))
[2025-05-16 15:23:02.820] [Debug] "MainWindow::addNewVectorTable"  - 已成功添加默认列配置 (mainwindow.cpp:1006, void MainWindow::addNewVectorTable())
[2025-05-16 15:23:02.820] [Debug] "MainWindow::addNewVectorTable"  - 准备写入文件头到: "C:\\Users\\GIGA\\Documents\\TEST8_vbindata\\table_1_data.vbindata" (mainwindow.cpp:1072, void MainWindow::addNewVectorTable())
[2025-05-16 15:23:02.820] [Debug] "BinaryFileHelper::writeBinaryHeader" - Attempting to write binary file header. (binaryfilehelper.cpp:90, static bool Persistence::BinaryFileHelper::writeBinaryHeader(QIODevice*, const BinaryFileHeader&))
[2025-05-16 15:23:02.820] [Debug] ["BinaryFileHelper::writeBinaryHeader - Successfully Written Header"] BinaryFileHeader Details:
  Magic Number: 0x"56454342"
  File Format Version: 1
  Data Schema Version: 1
  Row Count: 0
  Column Count: 0
  Created: 1747380182
  Updated: 1747380182
  Compression: 0 (C:/Users/GIGA/Desktop/QTProject/VecEdit/common/binary_file_format.h:61, void BinaryFileHeader::logDetails(const QString&) const)
[2025-05-16 15:23:02.820] [Debug] "BinaryFileHelper::writeBinaryHeader"  - Binary file header written successfully. (binaryfilehelper.cpp:149, static bool Persistence::BinaryFileHelper::writeBinaryHeader(QIODevice*, const BinaryFileHeader&))
[2025-05-16 15:23:02.821] [Info] "MainWindow::addNewVectorTable"  - 已成功创建空的二进制文件并写入文件头:  "C:\\Users\\GIGA\\Documents\\TEST8_vbindata\\table_1_data.vbindata" (mainwindow.cpp:1123, void MainWindow::addNewVectorTable())
[2025-05-16 15:23:02.821] [Debug] "MainWindow::onVectorTableSelectionChanged"  - 向量表选择已更改，索引: 0 (mainwindow.cpp:644, void MainWindow::onVectorTableSelectionChanged(int))
[2025-05-16 15:23:02.821] [Debug] "MainWindow::onVectorTableSelectionChanged"  - 当前表ID: 1 (mainwindow.cpp:648, void MainWindow::onVectorTableSelectionChanged(int))
[2025-05-16 15:23:02.821] [Debug] MainWindow::syncTabWithComboBox - 同步Tab页签与下拉框选择 (mainwindow.cpp:725, void MainWindow::syncTabWithComboBox(int))
[2025-05-16 15:23:02.821] [Debug] "MainWindow::onVectorTableSelectionChanged"  - 表  1  当前有  6  个列配置 (mainwindow.cpp:662, void MainWindow::onVectorTableSelectionChanged(int))
[2025-05-16 15:23:02.821] [Debug] "MainWindow::onVectorTableSelectionChanged"  - 开始加载表格数据，表ID: 1 (mainwindow.cpp:673, void MainWindow::onVectorTableSelectionChanged(int))
[2025-05-16 15:23:02.821] [Debug] "VectorDataHandler::loadVectorTableData"  - 开始加载, 表ID: 1 (vectordatahandler.cpp:337, bool VectorDataHandler::loadVectorTableData(int, QTableWidget*))
[2025-05-16 15:23:02.821] [Debug] "VectorDataHandler::loadVectorTableMeta"  - 开始加载, 表ID: 1 (vectordatahandler.cpp:35, bool {anonymous}::loadVectorTableMeta(int, QString&, QList<Vector::ColumnInfo>&, int&, int&))
[2025-05-16 15:23:02.821] [Warning] "VectorDataHandler::loadVectorTableMeta"  - 查询主记录失败, 表ID:  1 , 错误:  "Parameter count mismatch" (vectordatahandler.cpp:57, bool {anonymous}::loadVectorTableMeta(int, QString&, QList<Vector::ColumnInfo>&, int&, int&))
[2025-05-16 15:23:02.822] [Warning] "VectorDataHandler::loadVectorTableData"  - 元数据加载失败, 表ID: 1 (vectordatahandler.cpp:356, bool VectorDataHandler::loadVectorTableData(int, QTableWidget*))
[2025-05-16 15:23:02.822] [Debug] "MainWindow::onVectorTableSelectionChanged"  - VectorDataHandler::loadVectorTableData 返回: false ，表ID: 1 ，列数: 0 (mainwindow.cpp:675, void MainWindow::onVectorTableSelectionChanged(int))
[2025-05-16 15:23:02.822] [Warning] "MainWindow::onVectorTableSelectionChanged"  - 表格加载失败，表ID: 1 (mainwindow.cpp:712, void MainWindow::onVectorTableSelectionChanged(int))
[2025-05-16 15:23:02.822] [Debug] MainWindow::addVectorTableTab - 添加向量表Tab页签: "1" (mainwindow.cpp:799, void MainWindow::addVectorTableTab(int, const QString&))
[2025-05-16 15:23:02.822] [Debug] MainWindow::showPinSelectionDialog - 开始显示管脚选择对话框 (mainwindow.cpp:1199, void MainWindow::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:07.635] [Debug] DialogManager::showPinSelectionDialog - Preparing to delete old column config for tableId: 1 (dialogmanager.cpp:200, bool DialogManager::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:07.638] [Debug] DialogManager::showPinSelectionDialog - Successfully deleted old column config. (dialogmanager.cpp:217, bool DialogManager::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:07.638] [Debug] DialogManager::showPinSelectionDialog - Preparing to delete old vector_table_pins for tableId: 1 (dialogmanager.cpp:220, bool DialogManager::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:07.638] [Debug] DialogManager::showPinSelectionDialog - Successfully deleted old vector_table_pins. (dialogmanager.cpp:237, bool DialogManager::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:07.638] [Debug] DialogManager::showPinSelectionDialog - 开始添加标准列配置 (dialogmanager.cpp:242, bool DialogManager::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:07.639] [Debug] DialogManager::showPinSelectionDialog - 已成功添加 6 个标准列配置 (dialogmanager.cpp:351, bool DialogManager::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:07.639] [Debug] DialogManager::showPinSelectionDialog - 正在处理管脚:  "A" , ID: 1 , 勾选状态: 已选择 (dialogmanager.cpp:376, bool DialogManager::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:07.639] [Debug] DialogManager::showPinSelectionDialog - 为选中的管脚添加配置:  "A" (dialogmanager.cpp:386, bool DialogManager::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:07.639] [Debug] DialogManager::showPinSelectionDialog - 成功添加管脚到 vector_table_pins:  "A" (dialogmanager.cpp:401, bool DialogManager::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:07.639] [Debug] DialogManager::showPinSelectionDialog - 成功为管脚添加列配置: "A" Props: "{\"channel_count\":1,\"pin_list_id\":1,\"type_id\":2}" (dialogmanager.cpp:428, bool DialogManager::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:07.639] [Debug] DialogManager::showPinSelectionDialog - 正在处理管脚:  "B" , ID: 2 , 勾选状态: 已选择 (dialogmanager.cpp:376, bool DialogManager::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:07.639] [Debug] DialogManager::showPinSelectionDialog - 为选中的管脚添加配置:  "B" (dialogmanager.cpp:386, bool DialogManager::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:07.639] [Debug] DialogManager::showPinSelectionDialog - 成功添加管脚到 vector_table_pins:  "B" (dialogmanager.cpp:401, bool DialogManager::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:07.640] [Debug] DialogManager::showPinSelectionDialog - 成功为管脚添加列配置: "B" Props: "{\"channel_count\":1,\"pin_list_id\":2,\"type_id\":3}" (dialogmanager.cpp:428, bool DialogManager::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:07.640] [Debug] DialogManager::showPinSelectionDialog - 正在处理管脚:  "C" , ID: 3 , 勾选状态: 未选择 (dialogmanager.cpp:376, bool DialogManager::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:07.640] [Debug] DialogManager::showPinSelectionDialog - 跳过未选中的管脚:  "C" (dialogmanager.cpp:433, bool DialogManager::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:09.143] [Debug] DialogManager::showVectorDataDialog - 开始保存向量行数据，表ID: 1 ，起始索引: 0 ，总行数: 1 (dialogmanager.cpp:985, DialogManager::showVectorDataDialog(int, const QString&, int)::<lambda()>)
[2025-05-16 15:23:09.143] [Debug] "VectorDataHandler::insertVectorRows" - 开始插入向量行，表ID: 1 目标行数: 1 源数据表行数: 1 TimesetID: 1 Append: true StartIndex: 0 (vectordatahandler.cpp:849, bool VectorDataHandler::insertVectorRows(int, int, int, int, QTableWidget*, bool, const QList<std::pair<int, std::pair<QString, std::pair<int, QString> > > >&, QString&))
[2025-05-16 15:23:09.150] [Debug] "VectorDataHandler::loadVectorTableMeta"  - 开始加载, 表ID: 1 (vectordatahandler.cpp:35, bool {anonymous}::loadVectorTableMeta(int, QString&, QList<Vector::ColumnInfo>&, int&, int&))
[2025-05-16 15:23:09.150] [Warning] "VectorDataHandler::loadVectorTableMeta"  - 查询主记录失败, 表ID:  1 , 错误:  "Parameter count mismatch" (vectordatahandler.cpp:57, bool {anonymous}::loadVectorTableMeta(int, QString&, QList<Vector::ColumnInfo>&, int&, int&))
[2025-05-16 15:23:09.150] [Warning] "VectorDataHandler::insertVectorRows" - "无法加载表 1 的元数据。" (vectordatahandler.cpp:865, bool VectorDataHandler::insertVectorRows(int, int, int, int, QTableWidget*, bool, const QList<std::pair<int, std::pair<QString, std::pair<int, QString> > > >&, QString&))
[2025-05-16 15:23:11.543] [Debug] DialogManager::showVectorDataDialog - 开始保存向量行数据，表ID: 1 ，起始索引: 0 ，总行数: 1 (dialogmanager.cpp:985, DialogManager::showVectorDataDialog(int, const QString&, int)::<lambda()>)
[2025-05-16 15:23:11.543] [Debug] "VectorDataHandler::insertVectorRows" - 开始插入向量行，表ID: 1 目标行数: 1 源数据表行数: 1 TimesetID: 1 Append: true StartIndex: 0 (vectordatahandler.cpp:849, bool VectorDataHandler::insertVectorRows(int, int, int, int, QTableWidget*, bool, const QList<std::pair<int, std::pair<QString, std::pair<int, QString> > > >&, QString&))
[2025-05-16 15:23:11.549] [Debug] "VectorDataHandler::loadVectorTableMeta"  - 开始加载, 表ID: 1 (vectordatahandler.cpp:35, bool {anonymous}::loadVectorTableMeta(int, QString&, QList<Vector::ColumnInfo>&, int&, int&))
[2025-05-16 15:23:11.549] [Warning] "VectorDataHandler::loadVectorTableMeta"  - 查询主记录失败, 表ID:  1 , 错误:  "Parameter count mismatch" (vectordatahandler.cpp:57, bool {anonymous}::loadVectorTableMeta(int, QString&, QList<Vector::ColumnInfo>&, int&, int&))
[2025-05-16 15:23:11.549] [Warning] "VectorDataHandler::insertVectorRows" - "无法加载表 1 的元数据。" (vectordatahandler.cpp:865, bool VectorDataHandler::insertVectorRows(int, int, int, int, QTableWidget*, bool, const QList<std::pair<int, std::pair<QString, std::pair<int, QString> > > >&, QString&))
[2025-05-16 15:23:14.146] [Debug] MainWindow::showPinSelectionDialog - 管脚选择对话框返回结果: true (mainwindow.cpp:1201, void MainWindow::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:14.146] [Debug] MainWindow::showPinSelectionDialog - 刷新表格显示，表ID: 1 (mainwindow.cpp:1207, void MainWindow::showPinSelectionDialog(int, const QString&))
[2025-05-16 15:23:14.146] [Debug] "MainWindow::onVectorTableSelectionChanged"  - 向量表选择已更改，索引: 0 (mainwindow.cpp:644, void MainWindow::onVectorTableSelectionChanged(int))
[2025-05-16 15:23:14.146] [Debug] "MainWindow::onVectorTableSelectionChanged"  - 当前表ID: 1 (mainwindow.cpp:648, void MainWindow::onVectorTableSelectionChanged(int))
[2025-05-16 15:23:14.147] [Debug] MainWindow::syncTabWithComboBox - 同步Tab页签与下拉框选择 (mainwindow.cpp:725, void MainWindow::syncTabWithComboBox(int))
[2025-05-16 15:23:14.147] [Debug] "MainWindow::onVectorTableSelectionChanged"  - 表  1  当前有  8  个列配置 (mainwindow.cpp:662, void MainWindow::onVectorTableSelectionChanged(int))
[2025-05-16 15:23:14.147] [Debug] "MainWindow::onVectorTableSelectionChanged"  - 开始加载表格数据，表ID: 1 (mainwindow.cpp:673, void MainWindow::onVectorTableSelectionChanged(int))
[2025-05-16 15:23:14.147] [Debug] "VectorDataHandler::loadVectorTableData"  - 开始加载, 表ID: 1 (vectordatahandler.cpp:337, bool VectorDataHandler::loadVectorTableData(int, QTableWidget*))
[2025-05-16 15:23:14.147] [Debug] "VectorDataHandler::loadVectorTableMeta"  - 开始加载, 表ID: 1 (vectordatahandler.cpp:35, bool {anonymous}::loadVectorTableMeta(int, QString&, QList<Vector::ColumnInfo>&, int&, int&))
[2025-05-16 15:23:14.147] [Warning] "VectorDataHandler::loadVectorTableMeta"  - 查询主记录失败, 表ID:  1 , 错误:  "Parameter count mismatch" (vectordatahandler.cpp:57, bool {anonymous}::loadVectorTableMeta(int, QString&, QList<Vector::ColumnInfo>&, int&, int&))
[2025-05-16 15:23:14.147] [Warning] "VectorDataHandler::loadVectorTableData"  - 元数据加载失败, 表ID: 1 (vectordatahandler.cpp:356, bool VectorDataHandler::loadVectorTableData(int, QTableWidget*))
[2025-05-16 15:23:14.147] [Debug] "MainWindow::onVectorTableSelectionChanged"  - VectorDataHandler::loadVectorTableData 返回: false ，表ID: 1 ，列数: 0 (mainwindow.cpp:675, void MainWindow::onVectorTableSelectionChanged(int))
[2025-05-16 15:23:14.147] [Warning] "MainWindow::onVectorTableSelectionChanged"  - 表格加载失败，表ID: 1 (mainwindow.cpp:712, void MainWindow::onVectorTableSelectionChanged(int))
[2025-05-16 15:23:14.149] [Debug] MainWindow::loadVectorTable - 开始加载向量表 (mainwindow.cpp:561, void MainWindow::loadVectorTable())
[2025-05-16 15:23:14.149] [Debug] MainWindow::loadVectorTable - 数据库已打开，开始查询向量表 (mainwindow.cpp:579, void MainWindow::loadVectorTable())
[2025-05-16 15:23:14.149] [Debug] MainWindow::loadVectorTable - 刷新TimeSet选项缓存 (mainwindow.cpp:584, void MainWindow::loadVectorTable())
[2025-05-16 15:23:14.149] [Debug] VectorTableItemDelegate::refreshCache - 缓存已清空，下次使用将重新从数据库加载 (vectortabledelegate.cpp:27, void VectorTableItemDelegate::refreshCache())
[2025-05-16 15:23:14.149] [Debug] MainWindow::loadVectorTable - 向量表查询执行成功 (mainwindow.cpp:592, void MainWindow::loadVectorTable())
[2025-05-16 15:23:14.149] [Debug] "MainWindow::onVectorTableSelectionChanged"  - 向量表选择已更改，索引: 0 (mainwindow.cpp:644, void MainWindow::onVectorTableSelectionChanged(int))
[2025-05-16 15:23:14.149] [Debug] "MainWindow::onVectorTableSelectionChanged"  - 当前表ID: 1 (mainwindow.cpp:648, void MainWindow::onVectorTableSelectionChanged(int))
[2025-05-16 15:23:14.149] [Debug] MainWindow::syncTabWithComboBox - 同步Tab页签与下拉框选择 (mainwindow.cpp:725, void MainWindow::syncTabWithComboBox(int))
[2025-05-16 15:23:14.149] [Debug] "MainWindow::onVectorTableSelectionChanged"  - 表  1  当前有  8  个列配置 (mainwindow.cpp:662, void MainWindow::onVectorTableSelectionChanged(int))
[2025-05-16 15:23:14.149] [Debug] "MainWindow::onVectorTableSelectionChanged"  - 开始加载表格数据，表ID: 1 (mainwindow.cpp:673, void MainWindow::onVectorTableSelectionChanged(int))
[2025-05-16 15:23:14.149] [Debug] "VectorDataHandler::loadVectorTableData"  - 开始加载, 表ID: 1 (vectordatahandler.cpp:337, bool VectorDataHandler::loadVectorTableData(int, QTableWidget*))
[2025-05-16 15:23:14.149] [Debug] "VectorDataHandler::loadVectorTableMeta"  - 开始加载, 表ID: 1 (vectordatahandler.cpp:35, bool {anonymous}::loadVectorTableMeta(int, QString&, QList<Vector::ColumnInfo>&, int&, int&))
[2025-05-16 15:23:14.149] [Warning] "VectorDataHandler::loadVectorTableMeta"  - 查询主记录失败, 表ID:  1 , 错误:  "Parameter count mismatch" (vectordatahandler.cpp:57, bool {anonymous}::loadVectorTableMeta(int, QString&, QList<Vector::ColumnInfo>&, int&, int&))
[2025-05-16 15:23:14.149] [Warning] "VectorDataHandler::loadVectorTableData"  - 元数据加载失败, 表ID: 1 (vectordatahandler.cpp:356, bool VectorDataHandler::loadVectorTableData(int, QTableWidget*))
[2025-05-16 15:23:14.150] [Debug] "MainWindow::onVectorTableSelectionChanged"  - VectorDataHandler::loadVectorTableData 返回: false ，表ID: 1 ，列数: 0 (mainwindow.cpp:675, void MainWindow::onVectorTableSelectionChanged(int))
[2025-05-16 15:23:14.150] [Warning] "MainWindow::onVectorTableSelectionChanged"  - 表格加载失败，表ID: 1 (mainwindow.cpp:712, void MainWindow::onVectorTableSelectionChanged(int))
[2025-05-16 15:23:14.150] [Debug] MainWindow::addVectorTableTab - 添加向量表Tab页签: "1" (mainwindow.cpp:799, void MainWindow::addVectorTableTab(int, const QString&))
[2025-05-16 15:23:14.150] [Debug] MainWindow::loadVectorTable - 找到向量表: "1" ID: 1 (mainwindow.cpp:606, void MainWindow::loadVectorTable())
[2025-05-16 15:23:14.150] [Debug] MainWindow::loadVectorTable - 总共找到 1 个向量表 (mainwindow.cpp:609, void MainWindow::loadVectorTable())
[2025-05-16 15:23:14.150] [Debug] MainWindow::loadVectorTable - 有向量表，显示向量表窗口 (mainwindow.cpp:619, void MainWindow::loadVectorTable())
[2025-05-16 15:31:25.673] [Debug] main - 应用程序退出，返回码: 0 (main.cpp:21, int qMain(int, char**))
[2025-05-16 15:31:25.692] [Warning] QSqlDatabasePrivate::removeDatabase: connection 'qt_sql_default_connection' is still in use, all queries will cease to work.
[2025-05-16 15:31:25.692] [Info] 数据库连接已关闭 (databasemanager.cpp:268, void DatabaseManager::closeDatabase())
[2025-05-16 15:31:25.712] [Debug] VectorDataHandler::~VectorDataHandler - 析构 (vectordatahandler.cpp:517, virtual VectorDataHandler::~VectorDataHandler())
